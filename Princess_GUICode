import javafx.application.Application;
import database.DBOperations;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;

public class GUITwo extends Application{

    private TextField idTxtf = new TextField();
    private TextField nameTxtf = new TextField();
    private TextField courseTxtf = new TextField();
    private VBox resultSection = new VBox(10);

    @Override
    public void start(Stage primaryStage){
        Label welcomeLabel = new Label("AMS mockup system!");
        Label instructionLabel = new Label("Select a database operation to perform");
        Label titleLbl = new Label("Student Management");
        Label idLbl = new Label("ID:");
        Label nameLbl = new Label("Name:");
        Label courseLbl = new Label("Course:");

        Button create = new Button("CREATE");
        Button select = new Button("READ");
        Button update = new Button("UPDATE");
        Button delete = new Button("DELETE");

        
        Font fontalt = Font.font("Georgia", FontWeight.NORMAL, 13);
        welcomeLabel.setFont(fontalt);
        titleLbl.setFont(fontalt);
        Font fontalt2 = Font.font("Courier New", FontWeight.NORMAL, 10);
        instructionLabel.setFont(fontalt2);
        idLbl.setFont(fontalt2);
        nameLbl.setFont(fontalt2);
        courseLbl.setFont(fontalt2);
        Font fontalt3 = Font.font("Courier New", FontWeight.EXTRA_BOLD, 10);
        create.setFont(fontalt3);
        select.setFont(fontalt3);
        update.setFont(fontalt3);
        delete.setFont(fontalt3);
        
        create.setStyle("-fx-background-color: limegreen; -fx-text-fill: white;"); 
        select.setStyle("-fx-background-color: limegreen; -fx-text-fill: white;");
        update.setStyle("-fx-background-color: limegreen; -fx-text-fill: white;");
        delete.setStyle("-fx-background-color: limegreen; -fx-text-fill: white;");
        
        VBox topLabels = new VBox(6);
        topLabels.setAlignment(Pos.TOP_CENTER);
        topLabels.getChildren().addAll(welcomeLabel, titleLbl);

        GridPane inputGrid = new GridPane();
        inputGrid.setHgap(10);
        inputGrid.setVgap(10);
        inputGrid.setAlignment(Pos.CENTER);
        inputGrid.setPadding(new javafx.geometry.Insets(10));

        inputGrid.add(idLbl, 0, 0);
        inputGrid.add(idTxtf, 1, 0);
        inputGrid.add(nameLbl, 0, 1);
        inputGrid.add(nameTxtf, 1, 1);
        inputGrid.add(courseLbl, 0, 2);
        inputGrid.add(courseTxtf, 1, 2);
        
        HBox buttonBox = new HBox(15);
        buttonBox.setAlignment(Pos.CENTER);
        buttonBox.getChildren().addAll(create, select,update,delete);
        buttonBox.setPadding(new javafx.geometry.Insets(10));

        resultSection.setPrefWidth(400);
        resultSection.setStyle("-fx-padding: 10; -fx-border-style: solid; -fx-border-width: 2; -fx-border-color: gray;");
        resultSection.setVisible(false);
        
        VBox root = new VBox();
        root.getChildren().addAll(topLabels, instructionLabel,inputGrid,buttonBox, resultSection);
        root.setAlignment(Pos.CENTER);
        root.setPadding(new javafx.geometry.Insets(0,10,10,20));
        root.setStyle("-fx-background-color: lightblue; -fx-padding: 20; -fx-spacing: 10;");
        
        Scene scene = new Scene(root, 600,450);
        
        primaryStage.setTitle("AMS");
        primaryStage.setScene(scene);
        primaryStage.show();
        primaryStage.setResizable(false);
        
        create.setOnAction(e -> handleCreate());
        select.setOnAction(e -> handleSelect());
        update.setOnAction(e -> handleUpdate());
        delete.setOnAction(e -> handleDelete());
    }
    
        private void handleCreate(){
            String id = idTxtf.getText().trim();
            String name = nameTxtf.getText().trim();
            String course = courseTxtf.getText().trim();

            if (!id.isEmpty() && !name.isEmpty() && !course.isEmpty()) {
            DBOperations dbop = new DBOperations();
            dbop.insert(id, name, course);
            showInfo("Record inserted successfully.");
             } else {
            showWarning("Please fill in all fields.");
         }
        }

        private void handleSelect(){
           String id = idTxtf.getText().trim();
           if (!id.isEmpty()) {
            DBOperations dbop = new DBOperations();
            dbop.select(id, resultSection);
            resultSection.setVisible(true);
            } else {
            showWarning("Please enter an ID.");
             }
        }
        
        private void handleUpdate() {
        String id = idTxtf.getText().trim();
        String name = nameTxtf.getText().trim();
        String course = courseTxtf.getText().trim();

        if (!id.isEmpty() && !name.isEmpty() && !course.isEmpty()) {
            DBOperations dbop = new DBOperations();
            dbop.update(id, name, course);
            showInfo("Record updated successfully.");
        } else {
            showWarning("Please fill in all fields.");
        }
    }
        
        private void handleDelete() {
        String id = idTxtf.getText().trim();
        if (!id.isEmpty()) {
            DBOperations dbop = new DBOperations();
            dbop.delete(id);
            showInfo("Record deleted successfully.");
        } else {
            showWarning("Please enter an ID.");
        }
    }
        
        private void showInfo(String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION, message, ButtonType.OK);
        alert.showAndWait();
    }

        private void showWarning(String message) {
        Alert alert = new Alert(Alert.AlertType.WARNING, message, ButtonType.OK);
        alert.showAndWait();
    }
    
    
    public static void main(String[] args) {
        launch(args);
    }
    
}
