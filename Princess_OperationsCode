import java.sql.*;
import java.rmi.RemoteException;

public class DBOperations {

    DBConnection dbcon = new DBConnection();

    public void insert(String id, String name, String course) {
        try {
            String query = "INSERT INTO students(student_id, student_name,student_course) VALUES(?,?,?);";

            PreparedStatement pStmt = dbcon.con.prepareStatement(query);

            //setting the placeholders. 1st placeholder is ID, 2nd is name, 3rd is course
            pStmt.setString(1, id);
            pStmt.setString(2, name);
            pStmt.setString(3, course);

            int affectedRow = pStmt.executeUpdate();
            System.out.println("The rows inserted are rows: " + affectedRow);
            pStmt.close();
        } catch (SQLException g) {
            System.out.println("Failed to insert " + g.getMessage());
        }
    }

    public String select(String id) throws RemoteException {
    try {
        String query = "SELECT * FROM students WHERE student_id= ?;";
        PreparedStatement pst = dbcon.con.prepareStatement(query);
        pst.setString(1, id);

        ResultSet rs = pst.executeQuery();
        
        StringBuilder result = new StringBuilder();
        
        if (rs.next()) {
            String studentId = rs.getString("student_id");
            String studentName = rs.getString("student_name");
            String studentCourse = rs.getString("student_course");
            
            result.append("Student: ").append(studentId).append("  ")
                  .append(studentName).append("  ").append(studentCourse);
            
            while (rs.next()) {
                studentId = rs.getString("student_id");
                studentName = rs.getString("student_name");
                studentCourse = rs.getString("student_course");
                result.append("\nStudent: ").append(studentId).append("  ")
                      .append(studentName).append("  ").append(studentCourse);
            }
        } else {
            result.append("No results found for ID: ").append(id);
        }
        
        rs.close();
        pst.close();
        return result.toString();

    } catch (SQLException d) {
        System.out.println("Operation not completed :| " + d.getMessage());
        return "Error retrieving data.";
    }
}

    public void update(String id, String name, String course) {
        try {
            String query = "UPDATE students SET student_name = ?, student_course=? WHERE student_id=?;";
            PreparedStatement ps = dbcon.con.prepareStatement(query);

            ps.setString(1, name);
            ps.setString(2, course);
            ps.setString(1, id);

            int rowsAffected = ps.executeUpdate();
            System.out.println("The updated rows are row: " + rowsAffected);

            ps.close();
        } catch (SQLException u) {
            System.out.println("Failed to update " + u.getMessage());
        }
    }

    public void delete(String id) {
        try {
            PreparedStatement st = dbcon.con.prepareStatement("DELETE FROM students WHERE student_id=?;");

            st.setString(1, id);
            int deletedRow = st.executeUpdate();
            System.out.println("You have deleted row: " + deletedRow);

            st.close();
        } catch (SQLException o) {
            System.out.println("Deletion not completed " + o.getMessage());
        }
    }
    
    public void display(){
        try{
            PreparedStatement pt = dbcon.con.prepareStatement("SELECT * FROM students");
    
            ResultSet rs = pt.executeQuery();
    
            while(rs.next()){
                String studentId= rs.getString("student_id");
                String studentName= rs.getString("student_name");
                String studentCourse= rs.getString("student_course");
      
            System.out.println("Studet ID: "+studentId + "  Name: "+ studentName+ "  Course: "+studentCourse);
            }
       
        rs.close();
        pt.close();
 
        }catch(SQLException j){
         System.out.println("Failed to display data "+j.getMessage());
    }
  }

public String displayWithDepartment(String departmentName) throws RemoteException {
    try {
        String query = "SELECT students.student_id, students.student_name, department.department_name " +
                      "FROM students JOIN courses ON students.student_course = courses.course_name " +
                      "JOIN department ON courses.department_name = department.department_name " +
                      "WHERE department.department_name = ?";
        
        PreparedStatement pt = dbcon.con.prepareStatement(query);
        pt.setString(1, departmentName);
        ResultSet rs = pt.executeQuery();
        
        StringBuilder result = new StringBuilder();
        
        if (rs.next()) {
            do {
                String studentId = rs.getString("student_id");
                String studentName = rs.getString("student_name");
                String deptName = rs.getString("department_name");
                
                result.append("Student: ")
                      .append(studentId).append("  ")
                      .append(studentName).append("  ")
                      .append(deptName).append("\n");
                
            } while (rs.next());
        } else {
            result.append("No students in department: ").append(departmentName);
        }
        
        rs.close();
        pt.close();
        return result.toString().trim(); // Remove trailing newline
        
    } catch (SQLException e) {
        System.out.println("Query failed: " + e.getMessage());
        return "Error loading department data";
    }
}
}
